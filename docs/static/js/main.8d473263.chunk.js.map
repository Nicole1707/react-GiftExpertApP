{"version":3,"sources":["components/Addcategories.js","components/GifGridItem.js","helpers/getGitfs.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["Addcategories","setCategories","useState","InputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","GifGridItem","id","title","url","className","src","alt","getGifs","category","a","encodeURI","fetch","resp","json","data","gifs","map","img","images","downsized_medium","GifGrid","loading","state","setstate","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"oMAGaA,EAAgB,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAC3B,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAcA,OACI,sBAAMC,SAVU,SAACC,GAClBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAQ,IAC9BR,GAAc,SAAAS,GAAI,OAAKP,GAAL,mBAAmBO,OACrCN,EAAc,MAKb,SACI,uBACAO,KAAK,OACLC,MAAST,EACTU,SAjBkB,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,a,QCLlBG,EAAc,SAAC,GAAqB,EAApBC,GAAqB,IAAjBC,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,IACpC,OACI,sBAAKC,UAAU,yCAAf,UAEI,qBAAKC,IAAKF,EAAKG,IAAKJ,IACpB,4BAAIA,Q,8BCPHK,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEbN,EAFa,iDAEmCO,UAAUF,GAF7C,+DAGAG,MAAMR,GAHN,cAGbS,EAHa,gBAIIA,EAAKC,OAJT,uBAIXC,EAJW,EAIXA,KAEFC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHhB,GAAIgB,EAAIhB,GACRC,MAAOe,EAAIf,MACXC,IAAG,UAAEc,EAAIC,cAAN,aAAE,EAAYC,iBAAiBhB,QAVvB,kBAcZY,GAdY,4CAAH,sDCKPK,EAAU,SAAC,GAAkB,IAAhBZ,EAAe,EAAfA,SAEtB,ECHwB,SAACA,GACzB,MAA0BrB,mBAAS,CAC/B2B,KAAM,GACNO,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAeA,OAXAC,qBAAU,WAENjB,EAAQC,GACHiB,MAAK,SAAAC,GACEH,EAAS,CACLT,KAAMY,EACNL,SAAS,SAI1B,CAACb,IACGc,EDb2BK,CAAanB,GAAjCU,EAAd,EAAQJ,KAAcO,EAAtB,EAAsBA,QAEtB,OACI,qCACI,oBAAIjB,UAAU,yCAAd,SAAwDI,IACvDa,GAAW,mBAAGjB,UAAU,mCAAb,qBAEZ,qBAAKA,UAAU,YAAf,SAEQc,EAAOF,KAAI,SAAAC,GACP,OACI,cAAC,EAAD,eAEQA,GADCA,EAAIhB,aEY1B2B,EA1BM,WAEjB,MAAoCzC,mBAAS,CAAC,WAA9C,mBAAO0C,EAAP,KAAmB3C,EAAnB,KAMA,OACI,qCACI,8CACA,cAAC,EAAD,CAAgBA,cAAgBA,IAChC,uBACA,6BAEQ2C,EAAWb,KAAK,SAAAR,GACZ,OAAO,cAAC,EAAD,CAEHA,SAAUA,GADJA,Y,MChBlCsB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.8d473263.chunk.js","sourcesContent":["import React, {useState} from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport const Addcategories = ({setCategories}) => {\r\n    const [InputValue, setInputValue] = useState('')\r\n    \r\n    const handleInputChange = (e) => {\r\n        setInputValue(e.target.value)\r\n    }\r\n    const handleSubmit =(e) =>{\r\n       e.preventDefault();\r\n\r\n       if (InputValue.trim().length >2){\r\n       setCategories(cats => [InputValue,...cats]);\r\n       setInputValue('')\r\n       }\r\n    }\r\n    \r\n    return (\r\n        <form onSubmit = {handleSubmit}>\r\n            <input\r\n            type=\"text\"\r\n            value = {InputValue}\r\n            onChange={handleInputChange}\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\nAddcategories.propTypes ={\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n","import React from 'react'\r\n\r\nexport const GifGridItem = ({id, title, url}) => {\r\n    return (\r\n        <div className=\"card animate__animated animate__zoomIn\">\r\n            {/* {img.title} */}\r\n            <img src={url} alt={title}/>\r\n            <p>{title}</p>\r\n\r\n        </div>\r\n    )\r\n}\r\n","export const getGifs = async (category) => {\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=iPL3FEgS3TtkvW6a7jWQIpTZPIRCCFe1`\r\n    const resp = await fetch(url)\r\n    const { data } = await resp.json()\r\n\r\n    const gifs = data.map(img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n\r\n        }\r\n    })\r\n    return gifs;\r\n\r\n\r\n}","import React from 'react'\r\nimport { GifGridItem } from './GifGridItem'\r\n\r\nimport { useFetchGifs } from \"../hooks/useFetchGifs\"\r\n\r\nexport const GifGrid = ({ category }) => {\r\n    // const [images, setImages] = useState([])\r\n    const { data: images, loading } = useFetchGifs(category)\r\n\r\n    return (\r\n        <>\r\n            <h3 className=\"animate__animated animate__slideInDown\">{category}</h3>\r\n            {loading && <p className=\"animate__animated animate__pulse\">Loading</p>}\r\n\r\n            <div className=\"card-grid\">\r\n                {\r\n                    images.map(img => {\r\n                        return (\r\n                            <GifGridItem\r\n                                key={img.id}\r\n                                {...img}\r\n                            />\r\n                        )\r\n                    })\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import { useState } from \"react\"\r\nimport { useEffect } from \"react/cjs/react.development\"\r\nimport { getGifs } from \"../helpers/getGitfs\"\r\n\r\nexport const useFetchGifs = (category) => {\r\n    const [state, setstate] = useState({\r\n        data: [],\r\n        loading: true\r\n    })\r\n    useEffect(() => {\r\n\r\n        getGifs(category)\r\n            .then(imgs => {\r\n                    setstate({\r\n                        data: imgs,\r\n                        loading: false\r\n                    })\r\n            })\r\n\r\n    }, [category])\r\n    return state\r\n\r\n\r\n}","import React, { useState } from \"react\"\r\nimport { Addcategories} from \"./components/Addcategories\";\r\nimport { GifGrid } from \"./components/GifGrid\";\r\n\r\n\r\nconst GifExpertApp = () => {\r\n\r\n    const [categories, setCategories] = useState(['Avatar'])\r\n\r\n    // const handleAdd = () => {\r\n    //     setCategories([...categories, 'Naruto'])\r\n    //     //setCategories(cats => [...cats, 'Hola'])\r\n    // }\r\n    return (\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <Addcategories  setCategories ={setCategories}/>\r\n            <hr />\r\n            <ol>\r\n                {\r\n                    categories.map( category => {\r\n                        return(<GifGrid \r\n                            key ={category}\r\n                            category={category}/>)\r\n                    })\r\n                }\r\n            </ol>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default GifExpertApp","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\nimport './index.css';\n\n\nReactDOM.render(\n  <GifExpertApp/>,\n  document.getElementById('root')\n);"],"sourceRoot":""}